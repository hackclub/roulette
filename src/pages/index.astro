---
import LinkButton from '../components/LinkButton.astro';
import BoxText from '../components/BoxText.astro';
import Wheel from '../components/Wheel.astro';
import GambleCard from '../components/GambleCard.astro';
import BoxAlt from '../components/BoxAlt.astro';
import InlineArrow from '../components/InlineArrow.astro';



import Layout from '../layouts/Layout.astro';
import Background from '../components/Background.astro';






import { requireUser, redirectToLogin } from '../lib/auth.js';

let userData;

export const prerender = false;

try {
  userData = await requireUser(Astro.request.headers);

} catch {
	userData = null;
}



const wheel_info = {
	"camera": {

	}
}

---



<Layout>
<div class="container">
	<Background style="position: static;"></Background>

	<div class="dim" id="dim" style="width: 100vw; height: 100vh; position: absolute; background-color: black;"></div>


	<div class="foreground" id="foreground">
		<img class="logo" src="/logo.png" alt="" fetchpriority="high" style="padding-top: 20vh;"/>
		<p>spin wheels. make games. get prizes.</p>
		<p>starts 8 august.</p>

		{ userData == null
			? <LinkButton href="/api/auth/slack" newpage arrow>sign in with slack</LinkButton>
			: <LinkButton href="/spin" newpage arrow>enter roulette</LinkButton>
		}

		<div class="explain" id="explain">

			<img src="/open_how it works.png" style="position: relative; left: 50px; margin-bottom: -100px; width: 70%;"></img>




			<div style="position: relative; margin-top: 100px; margin-right: 50%;">
				<BoxText>1. make a new game each round. gamble against yourself: hit the hours or lose it all. each round lasts 7 days.</BoxText>
			</div>

			<div style="position: relative; margin-top: -20px; margin-left: 40%;">
				<div style="background-color: var(--black);
				    border-radius: 36px;
				    margin: 0 auto;
				    padding: 20px;
						font-size: 0.7em;">
				wager: <span class="wager-count">5</span> chips (you start with 10)
				<input type="range" id="chips" name="chips" min="0" max="10" class="slider"/>
				</div>
			</div>

			<div style="position: relative; margin-top: 25px; display: flex; width: 100%; gap: 8px; justify-content: space-between;">

				<GambleCard hours='5' mult=1.5 rotation="-1"><span class="wager-count">5</span><InlineArrow/><span class="wager-pt5x">7.5</span> chips</GambleCard>
				<GambleCard hours='10' mult=2 rotation="4"><span class="wager-count">5</span><InlineArrow/><span class="wager-twox">10</span> chips</GambleCard>
				<GambleCard hours='25' mult=3 rotation="-3"><span class="wager-count">5</span><InlineArrow/><span class="wager-threex">15</span> chips</GambleCard>
			</div>




			<div style="position: absolute; left: 5%; margin-top: 100px;">
			<Wheel wheelChoice="camera"></Wheel>
			</div>
			<div style="position: absolute; left: 20%; margin-top: 70px;">
			<Wheel wheelChoice="gameplay"></Wheel>
			</div>
			<div style="position: absolute; left: 35%; margin-top: 60px;">
			<Wheel wheelChoice="setting"></Wheel>
			</div>



			<div style="position: relative; margin-top: 250px; margin-left: 40%;">
				<BoxText>2. spin three wheels, and make a game following it!</BoxText>
			</div>

			<div style="position: relative; margin-top: 100px;">
				<BoxText><p>3. cash in your chips in the shop. there are 4 rounds in total.</p>
				</BoxText>
			</div>

			<div class="prizes">
			<img src="/prize_aseprite.png" style="transform: rotate(20deg); left: 50px;"></img>
			<img src="/prize_steam.png" style="transform: rotate(-5deg); "></img>
			<img src="/prize_fangamer.png" style="transform: rotate(9deg); left: -10px;"></img>
			<img src="/prize_nintendo.webp" style="left: -30px;"></img>

			</div>

			<div class="prizes-price">
				<p>aseprite (40 chips) · steam gift card (25 chips) · fangamer gift card (60 chips) · nintendo switch (800 chips) · + other prizes!</p>
			</div>


			<img src="open_faq.png" style="margin-top: 100px; width: 25%;"></img>
			<div class="faq">
				<BoxText>

				<div style="width: 100%; text-align: left;">
				<details>
				<summary>am i eligible to participate?</summary>
				<p>yes, if you're 18 years old or younger!</p>
				</details>

				<details>
				<summary>how are the hours tracked? what counts?</summary>
				<p>hours will be tracked using hackatime!</p>
				<p>you can also report additional hours spent creating the assets for your game, such as art or audio. you need to substantiate these hours with screenshots and explanations.</p>
				</details>

				<details>
				<summary>what's required of the game?</summary>
				<p>your game must export to the web and have at least 5 minutes of gameplay.</p>
				<p>your code must be open-source.</p>
				<p>you should follow the prompts given on the wheel. but game development is difficult — if your game turns out different from the prompt, you will not be disqualified!</p>
				</details>


				<details>
				<summary>how long will roulette run for?</summary>
				<p>roulette will run for 4 rounds — each round lasting seven days.</p>
				<p>the first round begins in the afternoon 8 august (pst).</p>
				<p>the last round ends on 5 september.</p>
				</details>

				<details>
				<summary>can i double-dip with other hack club events?</summary>
				<p>double-dipping is not allowed for roulette — sorry!</p>
				</details>

				<details>
				<summary>can i work in a team?</summary>
				<p>roulette is meant to be a singleplayer challenge, at least for now.</p>
				</details>

				<details>
				<summary>what if my wheel spins to something that's too difficult or impossible?</summary>
				<p>you can earn respin tokens!</p>
				<p>at the start of each round, you also have the option to disable up to a third of the options on the wheel, for genres that you are not interested or comfortable with.</p>
				</details>

				<p>have more questions? head to <a href="https://hackclub.slack.com/archives/C0997MH9QF2" target="_blank">#roulette</a> on slack!

				</div>

				</BoxText>
			</div>

			<footer style="padding: 120px 20px 50px;">
			made with ❤︎ by @tongyu
			</footer>



		</div>

	</div>


</div>
</Layout>


<style>


	.container {

		text-align: center;

		overflow: hidden;
	}

	.container > div {
		position: absolute;

	}

	.foreground {
		display: flex;
		align-items: center;
		flex-flow: column;
		padding: 20px;
		box-sizing: border-box;
		overflow-y: scroll;
		width: 100%;
		height: 100%;
		overflow-x: hidden;

	}

	.foreground .logo {
		margin-bottom: 16px;
		width: 60%;
	}



	.foreground p {
		margin: 8px 0;
	}

  .explain {
    padding-top: 100px;
    width: 90%;
    box-sizing: border-box;
  }



  .slider {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;

    height: 3px;
    background: var(--pink);

  }

  .slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 25px;
    background: var(--black);
    border: 3px solid var(--pink);
    box-sizing: border-box;

    cursor: pointer;

  }

  .slider::-moz-range-thumb {
    width: 20px;
    height: 40px;
    background: var(--black);
    border: 4px solid var(--pink);
    box-sizing: border-box;
    cursor: pointer;
  }


  .prizes {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: -50px;

  }

  .prizes img {
    width: 30%;
    position: relative;
  }

  .prizes-price {
    background-color: var(--black);
    border-radius: 36px;
    width: 60%;
    margin: 0 auto;
    padding: 20px;
    margin-top: -20px;
    font-size: 0.7em;
  }


  .faq details {
    padding: 20px 0;
  }

  .faq details p {
    margin-left: 32px;
  }

  .dim {
    opacity: 0;
  }

  .dim.enabled {
    opacity: 1;
  }





	@media (max-width: 600px) {
		.foreground .logo {
			width: 90%;
		}


	}

</style>

<script>
var slider = document.getElementById("chips");

var outputs = document.getElementsByClassName('wager-count');

var output_pt5x = document.getElementsByClassName('wager-pt5x')

var output_twox = document.getElementsByClassName('wager-twox')

var output_threex = document.getElementsByClassName('wager-threex')

for (var i = 0; i < outputs.length; i++) {
  outputs[i].textContent = slider.value;
}


slider.oninput = function() {
  var pt5x = slider.value * 1.5;
  var twox = slider.value * 2;
  var threex = slider.value * 3;

  for (var i = 0; i < outputs.length; i++) {
    outputs[i].textContent = slider.value;
  }

  for (var i = 0; i < output_pt5x.length; i++) {
    output_pt5x[i].textContent = pt5x;
  }

  for (var i = 0; i < output_twox.length; i++) {
    output_twox[i].textContent = twox;
  }

  for (var i = 0; i < output_threex.length; i++) {
    output_threex[i].textContent = threex;
  }


}



const dims = document.getElementById('dim');

const foreground = document.getElementById('foreground');

const explain = document.getElementById('explain');

const opac_max = 0.7
const range = 200
const range_offset = -300
foreground.addEventListener('scroll', () => {
  const rect = explain.getBoundingClientRect();
  const y = rect.top; // distance from top of viewport


  var opac = - ((y + range_offset)/(range*2)) * opac_max;
  opac = Math.min(opac, opac_max)
  opac = Math.max(opac, 0)
  dim.style.opacity = opac;

});




</script>
